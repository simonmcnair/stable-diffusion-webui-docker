x-base_service: &base_service
    ports:
      - "${WEBUI_PORT:-7860}:7860"
    volumes:
      - &v1 ./data:/data
      - &v2 ./output:/output
    stop_signal: SIGKILL
    tty: true
    deploy:
      resources:
        reservations:
          devices:
              - driver: nvidia
                device_ids: ['0']
                capabilities: [compute, utility]
name: webui-docker
services:
  download:
    image: simonmcnair/download:master
    profiles: ["download"]
    volumes:
      - *v1

  auto: &automatic
    <<: *base_service
    profiles: ["auto"]
    build: ./services/AUTOMATIC1111
    image: sd-auto:80
    environment:
      - CLI_ARGS=--allow-code --medvram --xformers --enable-insecure-extension-access --api

  auto_GTX: &automatic_gtx
    <<: *base_service
    profiles: ["auto"]
    build: ./services/AUTOMATIC1111
    image: sd-auto-gtx:1
    environment:
      - CLI_ARGS=--allow-code --medvram --xformers --enable-insecure-extension-access --api

  auto-rocm:
    <<: *base_service
    profiles: ["auto-rocm"]
    build: 
      context: ./services/AUTOMATIC1111
      dockerfile: Dockerfile.rocm
    devices:
      - "/dev/kfd"
      - "/dev/dri"
    deploy: {}
    environment:
      - CLI_ARGS=--allow-code --medvram --enable-insecure-extension-access --api
      
  reforge: &reforge
    <<: *base_service
    profiles: ["reforge"]
    build: ./services/reforge
    image: sd-reforge:80
    environment:
      - CLI_ARGS=--allow-code --xformers --enable-insecure-extension-access --api --pin-shared-memory --cuda-malloc --cuda-stream

  forge: &forge
    <<: *base_service
    profiles: ["forge"]
    build: ./services/forge
    image: sd-forge:80
    environment:
      - CLI_ARGS=--allow-code --xformers --enable-insecure-extension-access --api --pin-shared-memory --cuda-malloc --cuda-stream

  auto-cpu:
    <<: *automatic
    profiles: ["auto-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--no-half --precision full --allow-code --enable-insecure-extension-access --api

  comfy: &comfy
    <<: *base_service
    profiles: ["comfy"]
    build: ./services/comfy/
    image: sd-comfy:6
    environment:
      - CLI_ARGS=

  comfy-cpu:
    <<: *comfy
    profiles: ["comfy-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--cpu

  fooocus: &fooocus
    <<: *base_service
    profiles: ["fooocus"]
    build: ./services/fooocus/
    image: sd-fooocus:3
    environment:
      - CLI_ARGS=

  auto_from_image: &automatic_from_image
    <<: *base_service
    profiles: ["auto"]
    image: simonmcnair/automatic1111:master
    environment:
      - CLI_ARGS=--allow-code --medvram --xformers --enable-insecure-extension-access --api

  auto-rocm_from_image: &auto-rocm_from_image
    <<: *base_service
    profiles: ["auto-rocm"]
    image: simonmcnair/automatic1111-rocm:master
    devices:
      - "/dev/kfd"
      - "/dev/dri"
    deploy: {}
    environment:
      - CLI_ARGS=--allow-code --medvram --enable-insecure-extension-access --api
      
  reforge_from_image: &reforge_from_image
    <<: *base_service
    profiles: ["reforge"]
    image: simonmcnair/reforge:master
    environment:
      - CLI_ARGS=--allow-code --xformers --enable-insecure-extension-access --api --pin-shared-memory --cuda-malloc --cuda-stream

  forge_from_image: &forge_from_image
    <<: *base_service
    profiles: ["forge"]
    image: simonmcnair/forge:master
    environment:
      - CLI_ARGS=--allow-code --xformers --enable-insecure-extension-access --api --pin-shared-memory --cuda-malloc --cuda-stream

  auto-cpu_from_image: &auto-cpu_from_image
    <<: *automatic
    profiles: ["auto-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--no-half --precision full --allow-code --enable-insecure-extension-access --api

  comfy_from_image: &comfy_from_image
    <<: *base_service
    profiles: ["comfy"]
    image: simonmcnair/comfy:master
    environment:
      - CLI_ARGS=

  comfy-cpu_from_image: &comfy-cpu_from_image
    <<: *comfy
    profiles: ["comfy-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--cpu

  fooocus_from_image: &fooocus_from_image
    <<: *base_service
    profiles: ["fooocus"]
    image: simonmcnair/fooocus:master
    environment:
      - CLI_ARGS=
